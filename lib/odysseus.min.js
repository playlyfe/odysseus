// playlyfe-odysseus v0.5.6
!function(t,o){return"function"==typeof define&&define.amd?define(["lodash","moment","bignumber"],o):"object"==typeof exports?module.exports=o(require("lodash"),require("moment"),require("bignumber.js")):t.Odysseus=o(t._,t.moment,t.BigNumber)}(this,function(t,o,e){var a;return t.templateSettings.interpolate=/@\{([\s\S]+?)\}@/g,t.templateSettings.escape=/\{\{([\s\S]+?)\}\}/g,t.templateSettings.evaluate=/\$\{([\s\S]+?)\}\$/g,t.templateSettings.variable="od",t.templateSettings.imports={_:t,moment:o,ZERO:new e(0)},a=function(){function o(e){e=e||{},this.options=t.defaults(e,{markup:o.default_markup,external:{}})}return o.default_markup={content:"od-content",image:"od-image",actor:"od-actor",target:"od-target",object:"od-object",role_list:"od-role-list",role:"od-role",lane:"od-lane",timestamp:"od-ts"},o.stored_templates={create:{text:"[{{moment(od.story.timestamp).format('llll')}}] - {{ od.story.admin ? '[Admin Event] ' : '' }}The '{{ od.story.team ? od.story.team.name || od.story.team.id : od.story.process.name || od.story.process.id }}' {{ od.ctx.isTeam ? 'team' : 'process' }} was created${ if (!od.story.admin) { }$ by {{ od.ctx.amActor ? 'you' : od.story.actor.alias || od.story.actor.id}}${ } }$.",html:"<div class='@{od.markup.content}@'>The <span class='@{od.markup.object}@'>{{od.story.team ? od.story.team.name || od.story.team.id : od.story.process.name || od.story.process.id}}</span> {{od.ctx.isTeam ? 'team' : 'process'}} was created${ if (!od.story.admin) { }$ by <span class='@{od.markup.actor}@'>{{ od.ctx.amActor ? 'you' : od.story.actor.alias || od.story.actor.id }}</span>${ } }$.${ if (!!od.story.admin) { }$<footer class='@{od.markup.footer}@'><span class='@{od.markup.admin}@'>Admin Event</span></footer>${ } }$</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.timestamp)).format('llll')}}'>{{ts.fromNow()}}</time>",image:""},"delete":{text:"[{{moment(od.story.timestamp).format('llll')}}] - {{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}} deleted the {{od.ctx.isTeam ? 'team' : 'process'}} '{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}'.",html:"<div class='@{od.markup.content}@'><span class='@{od.markup.actor}@'>{{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}}</span> deleted the {{od.ctx.isTeam ? 'team' : 'process'}} <span class='@{od.markup.object}@'>{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}</span>.</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.timestamp)).format('llll')}}'>{{ts.fromNow()}}</time>",image:""},join:{text:"[{{moment(od.story.timestamp).format('llll')}}] - {{ od.story.admin ? '[Admin Event] ' : '' }}{{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}} joined {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ '{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}'${ } }$ as ${ if (od.ctx.isTeam) { }${{_.keys(od.story.roles).join(', ')}}${ } else if (od.ctx.isProcess) { }${{_.reduce(od.story.roles, function(list, role, lane) {list.push([role + ' in ' + (lane === '*' ? 'All lanes' : lane === '~' ? 'No lanes' : (lane + ' lane'))]);return list;}, []).join(', ')}}${ } }$.",html:"<div class='@{od.markup.content}@'><span class='@{od.markup.actor}@'>{{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}}</span> joined {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ <span class='@{od.markup.object}@'>{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}</span>${ } }$ as <ul class='@{od.markup.role_list}@'>${ if (od.ctx.isTeam) { }$${ _.forEach(od.story.roles, function(enabled, role) { }$<li><span class='@{od.markup.role}@'>{{role}}</span></li>${ }) }$${ } else if (od.ctx.isProcess) { }$${ _.forEach(od.story.roles, function(role, lane) { }$<li><span class='@{od.markup.role}@'>{{role}}</span> in <span class='@{od.markup.lane}@'>{{lane === '*' ? 'All' : lane === '~' ? 'No' : lane}}</span> {{lane === '*'||lane === '~' ? 'lanes' : 'lane' }}</li>${ })}$${ } }$</ul>.${ if (!!od.story.admin) { }$<footer class='@{od.markup.footer}@'><span class='@{od.markup.admin}@'>Admin Event</span></footer>${ } }$</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.timestamp)).format('llll')}}'>{{ts.fromNow()}}</time>",image:"${ if (od.ctx.isDummy) { }$<i class='@{od.markup.dummy_icon}@'></i>${ } else { }$<img src='{{od.ext.base_url}}/{{od.ctx.amActor ? od.ext.profile.id : od.story.actor.id}}'>${ } }$"},leave:{text:"[{{moment(od.story.timestamp).format('llll')}}] - {{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}} left {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ '{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}'${ } }$.",html:"<div class='@{od.markup.content}@'><span class='@{od.markup.actor}@'>{{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}}</span> left {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ <span class='@{od.markup.object}@'>{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}</span>${ } }$.</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.timestamp)).format('llll')}}'>{{ts.fromNow()}}</time>",image:""},kick:{text:"[{{moment(od.story.timestamp).format('llll')}}] - {{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}} kicked {{od.ctx.amPlayer ? 'you' : od.story.player.alias||od.story.player.id}} from {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ '{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}'${ } }$.",html:"<div class='@{od.markup.content}@'><span class='@{od.markup.actor}@'>{{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}}</span> kicked <span class='@{od.markup.target}@'>{{od.ctx.amPlayer ? 'you' : od.story.player.alias||od.story.player.id}}</span> from {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ <span class='@{od.markup.object}@'>{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}</span>${ } }$.</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.timestamp)).format('llll')}}'>{{ts.fromNow()}}</time>",image:""},"join:request:accept":{text:"[{{moment(od.story.timestamp).format('llll')}}] - {{od.ctx.amPlayer ? 'Your' : (od.story.player.alias||od.story.player.id) + '’s'}} request to join {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ '{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}'${ } }$ has been accepted by {{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}}.",html:"<div class='@{od.markup.content}@'><span class='@{od.markup.target}@'>{{od.ctx.amPlayer ? 'Your' : (od.story.player.alias||od.story.player.id) + '’s'}}</span> request to join {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ <span class='@{od.markup.object}@'>{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}</span>${ } }$ has been accepted by <span class='@{od.markup.actor}@'>{{od.ctx.amActor ? 'you' : od.story.actor.alias||od.story.actor.id}}</span>.</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.timestamp)).format('llll')}}'>{{ts.fromNow()}}</time>",image:""},"join:request:reject":{text:"[{{moment(od.story.timestamp).format('llll')}}] - {{od.ctx.amPlayer ? 'Your' : (od.story.player.alias||od.story.player.id) + '’s'}} request to join {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ '{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}'${ } }$ has been rejected by {{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}}.",html:"<div class='@{od.markup.content}@'><span class='@{od.markup.target}@'>{{od.ctx.amPlayer ? 'Your' : (od.story.player.alias||od.story.player.id) + '’s'}}</span> request to join {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ <span class='@{od.markup.object}@'>{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}</span>${ } }$ has been rejected by <span class='@{od.markup.actor}@'>{{od.ctx.amActor ? 'you' : od.story.actor.alias||od.story.actor.id}}</span>.</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.timestamp)).format('llll')}}'>{{ts.fromNow()}}</time>",image:""},"invite:accept":{text:"[{{moment(od.story.timestamp).format('llll')}}] - {{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}} accepted {{od.ctx.amInviter ? 'your' : (od.story.inviter.alias||od.story.inviter.id) + '’s'}} invitation to join {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ '{{od.story.team ? od.story.team.name || od.story.team.id : od.story.process.name || od.story.process.id}}'${ } }$ as ${ if (od.ctx.isTeam) { }${{_.keys(od.story.roles).join(', ')}}${ } else if (od.ctx.isProcess) { }${{_.reduce(od.story.roles, function(list, role, lane) {list.push([role + ' in ' + (lane === '*' ? 'All lanes' : lane === '~' ? 'No lanes' : (lane + ' lane'))]);return list;}, []).join(', ')}}${ } }$.",html:"<div class='@{od.markup.content}@'><span class='@{od.markup.actor}@'>{{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}}</span> accepted <span class='@{od.markup.target}@'>{{od.ctx.amInviter ? 'your' : (od.story.inviter.alias||od.story.inviter.id) + '’s'}}</span> invitation to join {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ <span class='@{od.markup.object}@'>{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}</span>${ } }$ as <ul class='@{od.markup.role_list}@'>${ if (od.ctx.isTeam) { }$${ _.forEach(od.story.roles, function(enabled, role) { }$<li><span class='@{od.markup.role}@'>{{role}}</span></li>${ }) }$${ } else if (od.ctx.isProcess) { }$${ _.forEach(od.story.roles, function(role, lane) { }$<li><span class='@{od.markup.role}@'>{{role}}</span> in <span class='@{od.markup.lane}@'>{{lane === '*' ? 'All' : lane === '~' ? 'No' : lane}}</span> {{lane === '*'||lane === '~' ? 'lanes' : 'lane' }}</li>${ })}$${ } }$</ul>.</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.timestamp)).format('llll')}}'>{{ts.fromNow()}}</time>",image:""},"invite:reject":{text:"[{{moment(od.story.timestamp).format('llll')}}] - {{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}} rejected {{od.ctx.amInviter ? 'your' : (od.story.inviter.alias||od.story.inviter.id) + '’s'}} invitation to join {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ '{{od.story.team ? od.story.team.name || od.story.team.id : od.story.process.name || od.story.process.id}}'${ } }$ as ${ if (od.ctx.isTeam) { }${{_.keys(od.story.roles).join(', ')}}${ } else if (od.ctx.isProcess) { }${{_.reduce(od.story.roles, function(list, role, lane) {list.push([role + ' in ' + (lane === '*' ? 'All lanes' : lane === '~' ? 'No lanes' : (lane + ' lane'))]);return list;}, []).join(', ')}}${ } }$.",html:"<div class='@{od.markup.content}@'><span class='@{od.markup.actor}@'>{{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}}</span> rejected <span class='@{od.markup.target}@'>{{od.ctx.amInviter ? 'your' : (od.story.inviter.alias||od.story.inviter.id) + '’s'}}</span> invitation to join {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ <span class='@{od.markup.object}@'>{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}</span>${ } }$ as <ul class='@{od.markup.role_list}@'>${ if (od.ctx.isTeam) { }$${ _.forEach(od.story.roles, function(enabled, role) { }$<li><span class='@{od.markup.role}@'>{{role}}</span></li>${ }) }$${ } else if (od.ctx.isProcess) { }$${ _.forEach(od.story.roles, function(role, lane) { }$<li><span class='@{od.markup.role}@'>{{role}}</span> in <span class='@{od.markup.lane}@'>{{lane === '*' ? 'All' : lane === '~' ? 'No' : lane}}</span> {{lane === '*'||lane === '~' ? 'lanes' : 'lane' }}</li>${ })}$${ } }$</ul>.</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.timestamp)).format('llll')}}'>{{ts.fromNow()}}</time>",image:""},"role:request:accept":{text:"[{{moment(od.story.timestamp).format('llll')}}] - {{od.ctx.amPlayer ? 'Your' : (od.story.player.alias||od.story.player.id) + '’s'}} request for a change of roles in {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ '{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}'${ } }$ has been accepted by {{od.ctx.amActor ? 'you' : od.story.actor.alias||od.story.actor.id}}.\n  Changes:${ if (od.ctx.isTeam) {_.forEach(od.story.changes, function(diff, role) { }$\n    [{{ !diff.old ? '+' : '-'}}] {{role}}${ }); }$${ } else if (od.ctx.isProcess) {_.forEach(od.story.changes, function(diff, lane) {if(!!diff['old'] && !!diff['new']) { }$\n    [+] {{diff['new']}} in {{lane}} lane\n    [-] {{diff['old']}} in {{lane}} lane${ } else { }$\n    [{{ !diff.old ? '+' : '-'}}] {{diff['new'] || diff['old']}} in {{lane === '*' ? 'All lanes' : lane === '~' ? 'No lanes' : (lane + ' lane')}}${ }});} }$",html:"<div class='@{od.markup.content}@'><span class='@{od.markup.target}@'>{{od.ctx.amPlayer ? 'Your' : (od.story.player.alias||od.story.player.id) + '’s'}}</span> request for a change of roles in {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ <span class='@{od.markup.object}@'>{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}</span>${ } }$ has been accepted by <span class='@{od.markup.actor}@'>{{od.ctx.amActor ? 'you' : od.story.actor.alias||od.story.actor.id}}</span>.<ul class='@{od.markup.role_list}@ @{od.markup.diff_list}@'><li class='@{od.markup.list_header}@'>Changes</li>${ if (od.ctx.isTeam) {_.forEach(od.story.changes, function(diff, role) { }$<li class='@{od.markup[!diff.old ? 'diff_add' : 'diff_rem']}@'><span class='@{od.markup.role}@'>{{role}}</span></li>${ }); }$${ } else if (od.ctx.isProcess) {_.forEach(od.story.changes, function(diff, lane) {if(!!diff['old'] && !!diff['new']) { }$<li class='@{od.markup.diff_change}@'><span class='@{od.markup.role}@ @{od.markup.diff_add}@'>{{diff['new']}}</span> from <span class='@{od.markup.role}@ @{od.markup.diff_rem}@'>{{diff['old']}}</span> in <span class='@{od.markup.lane}@'>{{lane}}</span> lane</li>${ } else { }$<li class='@{od.markup[!diff.old ? 'diff_add' : 'diff_rem']}@'><span class='@{od.markup.role}@'>{{diff['new'] || diff['old']}}</span> in <span class='@{od.markup.lane}@'>{{lane === '*' ? 'All' : lane === '~' ? 'No' : lane}}</span> {{lane === '*'||lane === '~' ? 'lanes' : 'lane' }}</li>${ } }$${ }); }$${ } }$</ul>.</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.timestamp)).format('llll')}}'>{{ts.fromNow()}}</time>",image:""},"role:request:reject":{text:"[{{moment(od.story.timestamp).format('llll')}}] - {{od.ctx.amPlayer ? 'Your' : (od.story.player.alias||od.story.player.id) + '’s'}} request for a change of roles in {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ '{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}'${ } }$ has been rejected by {{od.ctx.amActor ? 'you' : od.story.actor.alias||od.story.actor.id}}.",html:"<div class='@{od.markup.content}@'><span class='@{od.markup.target}@'>{{od.ctx.amPlayer ? 'Your' : (od.story.player.alias||od.story.player.id) + '’s'}}</span> request for a change of roles in {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ <span class='@{od.markup.object}@'>{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}</span>${ } }$ has been rejected by <span class='@{od.markup.actor}@'>{{od.ctx.amActor ? 'you' : od.story.actor.alias||od.story.actor.id}}</span>.</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.timestamp)).format('llll')}}'>{{ts.fromNow()}}</time>",image:""},"role:change":{text:"[{{moment(od.story.timestamp).format('llll')}}] - ${ if (od.story.admin) { }$[Admin Event] {{od.ctx.amActor ? 'Your' : (od.story.actor.alias||od.story.actor.id)+'’s'}}${ } else { }${{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}} {{od.ctx.amActor ? 'have' : 'has'}} changed${ } }$ roles in {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ '{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}'${ } }${{ !!od.story.admin ? ' have been changed' : ''}}.\n  Changes:${ if (od.ctx.isTeam) {_.forEach(od.story.changes, function(diff, role) { }$\n    [{{ !diff.old ? '+' : '-'}}] {{role}}${ }); }$${ } else if (od.ctx.isProcess) {_.forEach(od.story.changes, function(diff, lane) {if(!!diff['old'] && !!diff['new']) { }$\n    [+] {{diff['new']}} in {{lane}} lane\n    [-] {{diff['old']}} in {{lane}} lane${ } else { }$\n    [{{ !diff.old ? '+' : '-'}}] {{diff['new'] || diff['old']}} in {{lane === '*' ? 'All lanes' : lane === '~' ? 'No lanes' : (lane + ' lane')}}${ }});} }$",html:"<div class='@{od.markup.content}@'>${ if (od.story.admin) { }$<span class='@{od.markup.target}@'>{{od.ctx.amActor ? 'Your' : (od.story.actor.alias||od.story.actor.id)+'’s'}}</span>${ } else { }$<span class='@{od.markup.actor}@'>{{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}}</span> {{od.ctx.amActor ? 'have' : 'has'}} changed${ } }$ roles in {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ <span class='@{od.markup.object}@'>{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}</span>${ } }${{ !!od.story.admin ? ' have been changed' : ''}}.<ul class='@{od.markup.role_list}@ @{od.markup.diff_list}@'><li class='@{od.markup.list_header}@'>Changes</li>${ if (od.ctx.isTeam) {_.forEach(od.story.changes, function(diff, role) { }$<li class='@{od.markup[!diff.old ? 'diff_add' : 'diff_rem']}@'><span class='@{od.markup.role}@'>{{role}}</span></li>${ }); }$${ } else if (od.ctx.isProcess) {_.forEach(od.story.changes, function(diff, lane) {if(!!diff['old'] && !!diff['new']) { }$<li class='@{od.markup.diff_change}@'><span class='@{od.markup.role}@ @{od.markup.diff_add}@'>{{diff['new']}}</span> from <span class='@{od.markup.role}@ @{od.markup.diff_rem}@'>{{diff['old']}}</span> in <span class='@{od.markup.lane}@'>{{lane}}</span> lane</li>${ } else { }$<li class='@{od.markup[!diff.old ? 'diff_add' : 'diff_rem']}@'><span class='@{od.markup.role}@'>{{diff['new'] || diff['old']}}</span> in <span class='@{od.markup.lane}@'>{{lane === '*' ? 'All' : lane === '~' ? 'No' : lane}}</span> {{lane === '*'||lane === '~' ? 'lanes' : 'lane' }}</li>${ } }$${ }); }$${ } }$</ul>.${ if (!!od.story.admin) { }$<footer class='@{od.markup.footer}@'><span class='@{od.markup.admin}@'>Admin Event</span></footer>${ } }$</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.timestamp)).format('llll')}}'>{{ts.fromNow()}}</time>",image:""},"role:assign":{text:"[{{moment(od.story.timestamp).format('llll')}}] - {{ od.story.admin ? '[Admin Event] ' : '' }}{{od.ctx.amPlayer ? 'Your' : (od.story.player.alias||od.story.player.id) + '’s'}} roles in {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ '{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}'${ } }$ have been changed${ if (!od.story.admin) { }$ by {{od.ctx.amActor ? 'you' : od.story.actor.alias||od.story.actor.id}}${ } }$.\n  Changes:${ if (od.ctx.isTeam) {_.forEach(od.story.changes, function(diff, role) { }$\n    [{{ !diff.old ? '+' : '-'}}] {{role}}${ }); }$${ } else if (od.ctx.isProcess) {_.forEach(od.story.changes, function(diff, lane) {if(!!diff['old'] && !!diff['new']) { }$\n    [+] {{diff['new']}} in {{lane}} lane\n    [-] {{diff['old']}} in {{lane}} lane${ } else { }$\n    [{{ !diff.old ? '+' : '-'}}] {{diff['new'] || diff['old']}} in {{lane === '*' ? 'All lanes' : lane === '~' ? 'No lanes' : (lane + ' lane')}}${ }});} }$",html:"<div class='@{od.markup.content}@'><span class='@{od.markup.target}@'>{{od.ctx.amPlayer ? 'Your' : (od.story.player.alias||od.story.player.id) + '’s'}}</span> roles in {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ <span class='@{od.markup.object}@'>{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}</span>${ } }$ have been changed${ if (!od.story.admin) { }$ by <span class='@{od.markup.actor}@'>{{od.ctx.amActor ? 'you' : od.story.actor.alias||od.story.actor.id}}</span>${ } }$.<ul class='@{od.markup.role_list}@ @{od.markup.diff_list}@'><li class='@{od.markup.list_header}@'>Changes</li>${ if (od.ctx.isTeam) {_.forEach(od.story.changes, function(diff, role) { }$<li class='@{od.markup[!diff.old ? 'diff_add' : 'diff_rem']}@'><span class='@{od.markup.role}@'>{{role}}</span></li>${ }); }$${ } else if (od.ctx.isProcess) {_.forEach(od.story.changes, function(diff, lane) {if(!!diff['old'] && !!diff['new']) { }$<li class='@{od.markup.diff_change}@'><span class='@{od.markup.role}@ @{od.markup.diff_add}@'>{{diff['new']}}</span> from <span class='@{od.markup.role}@ @{od.markup.diff_rem}@'>{{diff['old']}}</span> in <span class='@{od.markup.lane}@'>{{lane}}</span> lane</li>${ } else { }$<li class='@{od.markup[!diff.old ? 'diff_add' : 'diff_rem']}@'><span class='@{od.markup.role}@'>{{diff['new'] || diff['old']}}</span> in <span class='@{od.markup.lane}@'>{{lane === '*' ? 'All' : lane === '~' ? 'No' : lane}}</span> {{lane === '*'||lane === '~' ? 'lanes' : 'lane' }}</li>${ } }$${ }); }$${ } }$</ul>.${ if (!!od.story.admin) { }$<footer class='@{od.markup.footer}@'><span class='@{od.markup.admin}@'>Admin Event</span></footer>${ } }$</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.timestamp)).format('llll')}}'>{{ts.fromNow()}}</time>",image:""},"join:request":{text:"${ if(od.story.state === 'PENDING') { }$[{{moment(od.story.timestamp).format('llll')}}] - ${ if(od.ctx.amActor) { }$Your request to join ${ } else { }${{od.story.actor.alias||od.story.actor.id}} wants to join ${ } }${{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ '{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}'${ } }$ as ${ if (od.ctx.isTeam) { }${{_.keys(od.story.roles).join(', ')}}${ } else if (od.ctx.isProcess) { }${{_.reduce(od.story.roles, function(list, role, lane) {list.push([role + ' in ' + (lane === '*' ? 'All lanes' : lane === '~' ? 'No lanes' : (lane + ' lane'))]);return list;}, []).join(', ')}}${ } }${{ od.ctx.amActor ? ' is pending' : '' }}.${ } else if(od.story.state === 'CANCELLED') { }$[{{moment(od.story.cancelled_at).format('llll')}}] - {{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}} cancelled the request to join {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ '{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}'${ } }$.${ } else if(od.story.state === 'ACCEPTED') { }$[{{moment(od.story.accepted_at).format('llll')}}] - {{od.ctx.amActor ? 'Your' : (od.story.actor.alias||od.story.actor.id) + '’s'}} request to join {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ '{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}'${ } }$ has been accepted by {{od.ctx.amMetaActor ? 'you' : od.story.accepted_by.alias||od.story.accepted_by.id}}.${ } else if(od.story.state === 'REJECTED') { }$[{{moment(od.story.rejected_at).format('llll')}}] - {{od.ctx.amActor ? 'Your' : (od.story.actor.alias||od.story.actor.id) + '’s'}} request to join {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ '{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}'${ } }$ has been rejected by {{od.ctx.amMetaActor ? 'you' : od.story.rejected_by.alias||od.story.rejected_by.id}}.${ } }$",html:"${ if(od.story.state === 'PENDING') { }$<div class='@{od.markup.content}@'>${ if(od.ctx.amActor) { }$<span class='@{od.markup.actor}@'>Your</span> request to join ${ } else { }$<span class='@{od.markup.actor}@'>{{od.story.actor.alias||od.story.actor.id}}</span> wants to join ${ } }${{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ <span class='@{od.markup.object}@'>{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}</span>${ } }$ as <ul class='@{od.markup.role_list}@'>${ if (od.ctx.isTeam) { }$${ _.forEach(od.story.roles, function(enabled, role) { }$<li><span class='@{od.markup.role}@'>{{role}}</span></li>${ }) }$${ } else if (od.ctx.isProcess) { }$${ _.forEach(od.story.roles, function(role, lane) { }$<li><span class='@{od.markup.role}@'>{{role}}</span> in <span class='@{od.markup.lane}@'>{{lane === '*' ? 'All' : lane === '~' ? 'No' : lane}}</span> {{lane === '*'||lane === '~' ? 'lanes' : 'lane' }}</li>${ })}$${ } }$</ul>{{ od.ctx.amActor ? ' is pending' : '' }}.</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.timestamp)).format('llll')}}'>{{ts.fromNow()}}</time>${ } else if(od.story.state === 'CANCELLED') { }$<div class='@{od.markup.content}@'><span class='@{od.markup.actor}@'>{{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}}</span> cancelled the request to join {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ <span class='@{od.markup.object}@'>{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}</span>${ } }$.</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.cancelled_at)).format('llll')}}'>{{ts.fromNow()}}</time>${ } else if(od.story.state === 'ACCEPTED') { }$<div class='@{od.markup.content}@'><span class='@{od.markup.actor}@'>{{od.ctx.amActor ? 'Your' : (od.story.actor.alias||od.story.actor.id) + '’s'}}</span> request to join {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ <span class='@{od.markup.object}@'>{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}</span>${ } }$ has been accepted by <span class='@{od.markup.target}@'>{{od.ctx.amMetaActor ? 'you' : od.story.accepted_by.alias||od.story.accepted_by.id}}</span>.</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.accepted_at)).format('llll')}}'>{{ts.fromNow()}}</time>${ } else if(od.story.state === 'REJECTED') { }$<div class='@{od.markup.content}@'><span class='@{od.markup.actor}@'>{{od.ctx.amActor ? 'Your' : (od.story.actor.alias||od.story.actor.id) + '’s'}}</span> request to join {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ <span class='@{od.markup.object}@'>{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}</span>${ } }$ has been rejected by <span class='@{od.markup.target}@'>{{od.ctx.amMetaActor ? 'you' : od.story.rejected_by.alias||od.story.rejected_by.id}}</span>.</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.rejected_at)).format('llll')}}'>{{ts.fromNow()}}</time>${ } }$",image:""},invite:{text:"${ if(od.story.state === 'PENDING') { }$[{{moment(od.story.timestamp).format('llll')}}] - ${ if(od.ctx.amActor) { }$Your invitation to {{od.story.invitee.alias||od.story.invitee.id}} to join ${ } else { }${{od.story.actor.alias||od.story.actor.id}} invited you to join ${ } }$the {{od.ctx.isTeam ? 'team' : 'process'}} '{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}' as ${ if (od.ctx.isTeam) { }${{_.keys(od.story.roles).join(', ')}}${ } else if (od.ctx.isProcess) { }${{_.reduce(od.story.roles, function(list, role, lane) {list.push([role + ' in ' + (lane === '*' ? 'All lanes' : lane === '~' ? 'No lanes' : (lane + ' lane'))]);return list;}, []).join(', ')}}${ } }${{ od.ctx.amActor ? ' is pending' : '' }}.${ } else if(od.story.state === 'CANCELLED') { }$[{{moment(od.story.cancelled_at).format('llll')}}] - {{od.story.actor.alias||od.story.actor.id}} withdrew the invitation to join the {{od.ctx.isTeam ? 'team' : 'process'}} '{{od.story.team ? od.story.team.name || od.story.team.id : od.story.process.name || od.story.process.id}}'.${ } else if(od.story.state === 'ACCEPTED' || od.story.state === 'REJECTED') { }$[{{moment(od.story.accepted_at||od.story.rejected_at).format('llll')}}] - {{od.ctx.amInvitee ? 'You' : od.story.invitee.alias||od.story.invitee.id}} {{od.story.accepted_at ? 'accepted' : 'rejected'}} {{od.ctx.amActor ? 'your' : (od.story.actor.alias||od.story.actor.id)+'’s'}} invitation to join the {{od.ctx.isTeam ? 'team' : 'process'}} '{{od.story.team ? od.story.team.name || od.story.team.id : od.story.process.name || od.story.process.id}}' as ${ if (od.ctx.isTeam) { }${{_.keys(od.story.roles).join(', ')}}${ } else if (od.ctx.isProcess) { }${{_.reduce(od.story.roles, function(list, role, lane) {list.push([role + ' in ' + (lane === '*' ? 'All lanes' : lane === '~' ? 'No lanes' : (lane + ' lane'))]);return list;}, []).join(', ')}}${ } }$.${ } }$",html:"${ if(od.story.state === 'PENDING') { }$<div class='@{od.markup.content}@'>${ if(od.ctx.amActor) { }$<span class='@{od.markup.actor}@'>Your</span> invitation to <span class='@{od.markup.target}@'>{{od.story.invitee.alias||od.story.invitee.id}}</span> to join ${ } else { }$<span class='@{od.markup.actor}@'>{{od.story.actor.alias||od.story.actor.id}}</span> invited <span class='@{od.markup.target}@'>you</span> to join ${ } }$the {{od.ctx.isTeam ? 'team' : 'process'}} <span class='@{od.markup.object}@'>{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}</span> as <ul class='@{od.markup.role_list}@'>${ if (od.ctx.isTeam) { }$${ _.forEach(od.story.roles, function(enabled, role) { }$<li><span class='@{od.markup.role}@'>{{role}}</span></li>${ }) }$${ } else if (od.ctx.isProcess) { }$${ _.forEach(od.story.roles, function(role, lane) { }$<li><span class='@{od.markup.role}@'>{{role}}</span> in <span class='@{od.markup.lane}@'>{{lane === '*' ? 'All' : lane === '~' ? 'No' : lane}}</span> {{lane === '*'||lane === '~' ? 'lanes' : 'lane' }}</li>${ })}$${ } }$</ul>{{ od.ctx.amActor ? ' is pending' : '' }}.</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.timestamp)).format('llll')}}'>{{ts.fromNow()}}</time>${ } else if(od.story.state === 'CANCELLED') { }$<div class='@{od.markup.content}@'><span class='@{od.markup.actor}@'>{{od.story.actor.alias||od.story.actor.id}}</span> withdrew the invitation to join the {{od.ctx.isTeam ? 'team' : 'process'}} <span class='@{od.markup.object}@'>{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}</span>.</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.cancelled_at)).format('llll')}}'>{{ts.fromNow()}}</time>${ } else if(od.story.state === 'ACCEPTED' || od.story.state === 'REJECTED') { }$<div class='@{od.markup.content}@'><span class='@{od.markup.target}@'>{{od.ctx.amInvitee ? 'You' : od.story.invitee.alias||od.story.invitee.id}}</span> {{od.story.accepted_at ? 'accepted' : 'rejected'}} <span class='@{od.markup.actor}@'>{{od.ctx.amActor ? 'your' : (od.story.actor.alias||od.story.actor.id)+'’s'}}</span> invitation to join the {{od.ctx.isTeam ? 'team' : 'process'}} <span class='@{od.markup.object}@'>{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}</span> as <ul class='@{od.markup.role_list}@'>${ if (od.ctx.isTeam) { }$${ _.forEach(od.story.roles, function(enabled, role) { }$<li><span class='@{od.markup.role}@'>{{role}}</span></li>${ }) }$${ } else if (od.ctx.isProcess) { }$${ _.forEach(od.story.roles, function(role, lane) { }$<li><span class='@{od.markup.role}@'>{{role}}</span> in <span class='@{od.markup.lane}@'>{{lane === '*' ? 'All' : lane === '~' ? 'No' : lane}}</span> {{lane === '*'||lane === '~' ? 'lanes' : 'lane' }}</li>${ })}$${ } }$</ul>.</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.accepted_at||od.story.rejected_at)).format('llll')}}'>{{ts.fromNow()}}</time>${ } }$",image:""},"role:request":{text:"${ if(od.story.state === 'PENDING') { }$[{{moment(od.story.timestamp).format('llll')}}] - ${ if(od.ctx.amActor) { }$Your request for change of roles in ${ } else { }${{od.story.actor.alias||od.story.actor.id}} wants to change roles in ${ } }${{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ '{{od.story.team ? od.story.team.name || od.story.team.id : od.story.process.name || od.story.process.id}}'${ } }${{ od.ctx.amActor ? ' is pending' : '' }}.\n  New Roles:${ if (od.ctx.isTeam) { }$\n    [*] {{_.keys(od.story.roles).join(', ')}}${ } else if (od.ctx.isProcess) {_.forEach(od.story.roles, function(role, lane) { }$\n    [*] {{role}} in {{lane === '*' ? 'All' : lane === '~' ? 'No' : lane}} {{lane === '*' || lane === '~' ? 'lanes' : 'lane'}}${ });} }$${ } else if(od.story.state === 'CANCELLED') { }$[{{moment(od.story.cancelled_at).format('llll')}}] - {{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}} cancelled the request for change of roles in {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ '{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}'${ } }$.${ } else if(od.story.state === 'ACCEPTED') { }$[{{moment(od.story.accepted_at).format('llll')}}] - {{od.ctx.amActor ? 'Your' : (od.story.actor.alias||od.story.actor.id) + '’s'}} request for change of roles in {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ '{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}'${ } }$ has been accepted by {{od.story.accepted_by.alias||od.story.accepted_by.id}}.${ } else if(od.story.state === 'REJECTED') { }$[{{moment(od.story.rejected_at).format('llll')}}] - {{od.ctx.amActor ? 'Your' : (od.story.actor.alias||od.story.actor.id) + '’s'}} request for change of roles in {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ '{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}'${ } }$ has been rejected by {{od.story.rejected_by.alias||od.story.rejected_by.id}}.${ } }$",html:"${ if(od.story.state === 'PENDING') { }$<div class='@{od.markup.content}@'>${ if(od.ctx.amActor) { }$<span class='@{od.markup.actor}@'>Your</span> request for change of roles in ${ } else { }$<span class='@{od.markup.actor}@'>{{od.story.actor.alias||od.story.actor.id}}</span> wants to change roles in ${ } }${{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ <span class='@{od.markup.object}@'>{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}</span>${ } }${{ od.ctx.amActor ? ' is pending' : '' }}.<ul class='@{od.markup.role_list}@'><li class='@{od.markup.list_header}@'>New Roles</li>${ if (od.ctx.isTeam) {_.forEach(od.story.roles, function(enabled, role) { }$<li><span class='@{od.markup.role}@'>{{role}}</span></li>${ })} else if (od.ctx.isProcess) {_.forEach(od.story.roles, function(role, lane) { }$<li><span class='@{od.markup.role}@'>{{role}}</span> in <span class='@{od.markup.lane}@'>{{lane === '*' ? 'All' : lane === '~' ? 'No' : lane}}</span> {{lane === '*'||lane === '~' ? 'lanes' : 'lane' }}</li>${ });} }$</ul></div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.timestamp)).format('llll')}}'>{{ts.fromNow()}}</time>${ } else if(od.story.state === 'CANCELLED') { }$<div class='@{od.markup.content}@'><span class='@{od.markup.actor}@'>{{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}}</span> cancelled the request for change of roles in {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ <span class='@{od.markup.object}@'>{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}</span>${ } }$.</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.cancelled_at)).format('llll')}}'>{{ts.fromNow()}}</time>${ } else if(od.story.state === 'ACCEPTED') { }$<div class='@{od.markup.content}@'><span class='@{od.markup.actor}@'>{{od.ctx.amActor ? 'Your' : (od.story.actor.alias||od.story.actor.id) + '’s'}}</span> request for change of roles in {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ <span class='@{od.markup.object}@'>{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}</span>${ } }$ has been accepted by <span class='@{od.markup.target}@'>{{od.story.accepted_by.alias||od.story.accepted_by.id}}</span>.</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.accepted_at)).format('llll')}}'>{{ts.fromNow()}}</time>${ } else if(od.story.state === 'REJECTED') { }$<div class='@{od.markup.content}@'><span class='@{od.markup.actor}@'>{{od.ctx.amActor ? 'Your' : (od.story.actor.alias||od.story.actor.id) + '’s'}}</span> request for change of roles in {{od.ctx.isItem ? 'this' : 'the'}} {{od.ctx.isTeam ? 'team' : 'process'}}${ if (!od.ctx.isItem) { }$ <span class='@{od.markup.object}@'>{{od.story.team ? od.story.team.name || od.story.team.id :od.story.process.name || od.story.process.id}}</span>${ } }$ has been rejected by <span class='@{od.markup.target}@'>{{od.story.rejected_by.alias||od.story.rejected_by.id}}</span>.</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.rejected_at)).format('llll')}}'>{{ts.fromNow()}}</time>${ } }$",image:""},progress:{text:"[{{moment(od.story.timestamp).format('llll')}}] - {{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}} completed '{{od.story.activity.name}}' in {{od.ctx.isItem ? 'this' : 'the'}} process${ if(!od.ctx.isItem) { }$ '{{od.story.process.name || od.story.process.id}}'${ } }$.${ if (od.story.changes) { }$\n  Changes:${ } }$${ for (i = 0, _ref = (od.story.changes || []), len = _ref.length; i < _ref.length; i++) { change = _ref[i];if(change.metric.type === 'point'||change.metric.type === 'compound') {diff = ZERO.plus(change.delta['new']).minus(change.delta['old'] || 0);diff = (diff.gt(ZERO) ? '+' : '') + diff.toString(); }$\n    [*] {{diff}} {{change.metric.name}}${ } else if(change.metric.type === 'set') { }$\n  [>] {{change.metric.name}}${ _.forEach(change.delta, function(delta, item) {diff = ZERO.plus(delta['new']).minus(delta['old']||'0');diff = (diff.gt(ZERO) ? '+' : '') + diff.toString();}$\n    [*] {{diff}} {{item}}${ }); }$${ } else if(change.metric.type === 'state') { }$\n  [>] {{change.metric.name}}\n    [+] {{change.delta['new']}}\n    [-] {{change.delta['old']}}${ }} }$",html:"<div class='@{od.markup.content}@'><span class='@{od.markup.actor}@'>{{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}}</span> completed <span class='@{od.markup.score_activity}@'>{{od.story.activity.name}}</span>.${ if(od.story.changes) { }$<table class='@{od.markup.score_table}@'>${ }for (i = 0,\n  _ref = (od.story.changes || []),\n  len = _ref.length; i < _ref.length; i++) {\n    change = _ref[i];if (change.metric.type === 'point'||change.metric.type === 'compound') {diff = ZERO.plus(change.delta['new']).minus(change.delta['old'] || 0);diff = (diff.gt(ZERO) ? '+' : '') + diff.toString();}$<tbody class='@{od.markup.score_table_header}@'><tr><td><span class='@{od.markup.score_metric}@'>{{change.metric.name}}</span></td><td><span class='@{od.markup.score_delta_value}@'>{{diff}}</span></td></tr></tbody>${ } else if(change.metric.type === 'set') { }$<tbody class='@{od.markup.score_table_header}@'><tr><td colspan='2'><span class='@{od.markup.score_metric}@'>{{change.metric.name}}</span></td></tr></tbody><tbody class='@{od.markup.score_table_body}@'>${ _.forEach(change.delta, function(delta, item) {diff = ZERO.plus(delta['new']).minus(delta['old']||'0');diff = (diff.gt(ZERO) ? '+' : '') + diff.toString();}$<tr><td><span class='@{od.markup.score_delta_item}@'>{{item}}</span></td><td><span class='@{od.markup.score_delta_value}@'>{{diff}}</span></td></tr>${ }); }$</tbody>${ } else if(change.metric.type === 'state') { }$<tbody class='@{od.markup.score_table_header}@'><tr><td colspan='2'><span class='@{od.markup.score_metric}@'>{{change.metric.name}}</span></td></tr></tbody><tbody class='@{od.markup.score_table_body}@'><tr><td><span class='@{od.markup.score_delta_value}@ @{od.markup.diff_add}@'>{{change.delta['new']}}</span></td><td><span class='@{od.markup.score_delta_value}@ @{od.markup.diff_rem}@'>{{change.delta['old'] || '--'}}</span></td></tr></tbody>${ }}if(od.story.changes) { }$</table>${ }if(!od.ctx.isItem) { }$<footer class='@{od.markup.footer}@'><span class='@{od.markup.object}@'>{{od.story.process.name||od.story.process.id}}</span></footer>${ } }$</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.timestamp)).format('llll')}}'>{{ts.fromNow()}}</time>",image:""},resolution:{text:"[{{moment(od.story.timestamp).format('llll')}}] - {{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}} completed '{{od.story.activity.name}}' in {{od.ctx.isItem ? 'this' : 'the'}} process${ if(!od.ctx.isItem) { }$ '{{od.story.process.name || od.story.process.id}}'${ } }$ and credited {{od.ctx.amPlayer ? (od.ctx.amActor ? 'yourself' : 'you') : od.story.deferred.actor.alias||od.story.deferred.actor.id}} for completing '{{od.story.deferred.activity.name}}'.\n  Changes:${ for (i = 0, _ref = (od.story.deferred.changes || []), len = _ref.length; i < _ref.length; i++) { change = _ref[i];if(change.metric.type === 'point'||change.metric.type === 'compound') {diff = ZERO.plus(change.delta['new']).minus(change.delta['old'] || 0);diff = (diff.gt(ZERO) ? '+' : '') + diff.toString()}$\n    [*] {{diff}} {{change.metric.name}}${ } else if(change.metric.type === 'set') { }$\n  [>] {{change.metric.name}}${ _.forEach(change.delta, function(delta, item) {diff = ZERO.plus(delta['new']).minus(delta['old']||'0');diff = (diff.gt(ZERO) ? '+' : '') + diff.toString()}$\n    [*] {{diff}} {{item}}${ }); }$${ } else if(change.metric.type === 'state') { }$\n  [>] {{change.metric.name}}\n    [+] {{change.delta['new']}}\n    [-] {{change.delta['old']}}${ }} }$",html:"<div class='@{od.markup.content}@'><span class='@{od.markup.actor}@'>{{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}}</span> completed <span class='@{od.markup.score_activity}@'>{{od.story.activity.name}}</span> and credited <span class='@{od.markup.target}@'>{{od.ctx.amPlayer ? (od.ctx.amActor ? 'yourself' : 'you') : od.story.deferred.actor.alias||od.story.deferred.actor.id}}</span> for completing <span class='@{od.markup.score_activity}@'>{{od.story.deferred.activity.name}}</span>.<table class='@{od.markup.score_table}@'>${ for (i = 0, _ref = (od.story.deferred.changes || []), len = _ref.length; i < _ref.length; i++) { change = _ref[i];if(change.metric.type === 'point'||change.metric.type === 'compound') {diff = ZERO.plus(change.delta['new']).minus(change.delta['old'] || 0);diff = (diff.gt(ZERO) ? '+' : '') + diff.toString();}$<tbody class='@{od.markup.score_table_header}@'><tr><td><span class='@{od.markup.score_metric}@'>{{change.metric.name}}</span></td><td><span class='@{od.markup.score_delta_value}@'>{{diff}}</span></td></tr></tbody>${ } else if(change.metric.type === 'set') { }$<tbody class='@{od.markup.score_table_header}@'><tr><td colspan='2'><span class='@{od.markup.score_metric}@'>{{change.metric.name}}</span></td></tr></tbody><tbody class='@{od.markup.score_table_body}@'>${ _.forEach(change.delta, function(delta, item) {diff = ZERO.plus(delta['new']).minus(delta['old']||'0');diff = (diff.gt(ZERO) ? '+' : '') + diff.toString();}$<tr><td><span class='@{od.markup.score_delta_item}@'>{{item}}</span></td><td><span class='@{od.markup.score_delta_value}@'>{{diff}}</span></td></tr>${ }); }$</tbody>${ } else if(change.metric.type === 'state') { }$<tbody class='@{od.markup.score_table_header}@'><tr><td colspan='2'><span class='@{od.markup.score_metric}@'>{{change.metric.name}}</span></td></tr></tbody><tbody class='@{od.markup.score_table_body}@'><tr><td><span class='@{od.markup.score_delta_value}@ @{od.markup.diff_add}@'>{{change.delta['new']}}</span></td><td><span class='@{od.markup.score_delta_value}@ @{od.markup.diff_rem}@'>{{change.delta['old']}}</span></td></tr></tbody>${ }} }$</table>${ if(!od.ctx.isItem) { }$<footer class='@{od.markup.footer}@'><span class='@{od.markup.object}@'>{{od.story.process.name||od.story.process.id}}</span></footer>${ } }$</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.timestamp)).format('llll')}}'>{{ts.fromNow()}}</time>",image:""},level:{text:"[{{moment(od.story.timestamp).format('llll')}}] - {{od.ctx.amActor ? 'Your' : (od.story.actor.alias||od.story.actor.id) + '’s'}} ${ change = od.story.changes[0]; }$'{{change.metric.name}}' level changed ${ if (change.delta['old']) { }$from '{{change.delta['old']}}' ${ } }$to '{{change.delta['new']}}'.",html:"<div class='@{od.markup.content}@'><span class='@{od.markup.actor}@'>{{od.ctx.amActor ? 'Your' : (od.story.actor.alias||od.story.actor.id) + '’s'}}</span> ${ change = od.story.changes[0]; }$<span class='@{od.markup.score_metric}@'>{{change.metric.name}}</span> level changed${ if (change.delta['old']) { }$ from <span class='@{od.markup.score_delta_value}@ @{od.markup.diff_rem}@'>{{change.delta['old']}}</span>${ } }$ to <span class='@{od.markup.score_delta_value}@ @{od.markup.diff_add}@'>{{change.delta['new']}}</span>.</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.timestamp)).format('llll')}}'>{{ts.fromNow()}}</time>",image:""},achievement:{text:"[{{moment(od.story.timestamp).format('llll')}}] - {{od.ctx.amActor ? 'Congratulations! You' : od.story.actor.alias||od.story.actor.id}} unlocked an achievement.\n  Changes:${ for (i = 0, _ref = (od.story.changes || []), len = _ref.length; i < _ref.length; i++) { change = _ref[i]; }$\n  [>] {{change.metric.name}}${ _.forEach(change.delta, function(delta, item) {diff = ZERO.plus(delta['new']).minus(delta['old']||'0');diff = (diff.gt(ZERO) ? '+' : '') + diff.toString();}$\n    [*] {{diff}} {{item}}${ }); }$${ } }$",html:"<div class='@{od.markup.content}@'>{{od.ctx.amActor ? 'Congratulations! ' : ''}}<span class='@{od.markup.actor}@'>{{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}}</span> unlocked an achievement.<table class='@{od.markup.score_table}@ @{od.markup.achievement_table}@'>${ for (i = 0, _ref = (od.story.changes || []), len = _ref.length; i < _ref.length; i++) { change = _ref[i]; }$<tbody class='@{od.markup.score_table_header}@'><tr><td colspan='2'><span class='@{od.markup.score_metric}@'>{{change.metric.name}}</span></td></tr></tbody><tbody class='@{od.markup.score_table_body}@'>${ _.forEach(change.delta, function(delta, item) {diff = ZERO.plus(delta['new']).minus(delta['old']||'0');diff = (diff.gt(ZERO) ? '+' : '') + diff.toString();}$<tr><td><span class='@{od.markup.score_delta_item}@'>{{item}}</span></td><td><span class='@{od.markup.score_delta_value}@'>{{diff}}</span></td></tr>${ }); }$</tbody>${ } }$</table></div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.timestamp)).format('llll')}}'>{{ts.fromNow()}}</time>",image:""},score:{text:"[{{moment(od.story.timestamp).format('llll')}}] - {{ od.story.admin ? '[Admin Event] ' : '' }}{{od.ctx.amPlayer ? 'Your' : (od.story.player.alias||od.story.player.id) + '’s'}} scores were changed.\n  New Scores:${ for (i = 0, _ref = (od.story.changes || []), len = _ref.length; i < _ref.length; i++) { change = _ref[i];if(change.metric.type === 'point'||change.metric.type === 'compound') { }$\n    [*] {{change.delta['new']}} {{change.metric.name}}${ } else if(change.metric.type === 'set') { }$\n  [>] {{change.metric.name}}${ _.forEach(change.delta, function(delta, item) { }$\n    [*] {{delta['new']}} {{item}}${ }); }$${ } else if(change.metric.type === 'state') { }$\n  [*] {{change.metric.name}} - {{change.delta['new']}}${ }} }$",html:"<div class='@{od.markup.content}@'><span class='@{od.markup.target}@'>{{od.ctx.amPlayer ? 'Your' : (od.story.player.alias||od.story.player.id) + '’s'}}</span> scores were changed.<table class='@{od.markup.score_table}@'>${ for (i = 0, _ref = (od.story.changes || []), len = _ref.length; i < _ref.length; i++) { change = _ref[i];if (change.metric.type === 'point'||change.metric.type === 'compound') { }$<tbody class='@{od.markup.score_table_header}@'><tr><td><span class='@{od.markup.score_metric}@'>{{change.metric.name}}</span></td><td><span class='@{od.markup.score_delta_value}@'>{{change.delta['new']}}</span></td></tr></tbody>${ } else if(change.metric.type === 'set') { }$<tbody class='@{od.markup.score_table_header}@'><tr><td colspan='2'><span class='@{od.markup.score_metric}@'>{{change.metric.name}}</span></td></tr></tbody><tbody class='@{od.markup.score_table_body}@'>${ _.forEach(change.delta, function(delta, item) { }$<tr><td><span class='@{od.markup.score_delta_item}@'>{{item}}</span></td><td><span class='@{od.markup.score_delta_value}@'>{{delta['new']}}</span></td></tr>${ }); }$</tbody>${ } else if(change.metric.type === 'state') { }$<tbody class='@{od.markup.score_table_header}@'><tr><td><span class='@{od.markup.score_metric}@'>{{change.metric.name}}</span></td><td><span class='@{od.markup.score_delta_value}@'>{{change.delta['new']}}</span></td></tr></tbody>${ }} }$</table>${ if (!!od.story.admin) { }$<footer class='@{od.markup.footer}@'><span class='@{od.markup.admin}@'>Admin Event</span></footer>${ } }$</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.timestamp)).format('llll')}}'>{{ts.fromNow()}}</time>",image:""},escalation:{text:"[{{moment(od.story.timestamp).format('llll')}}] - {{od.story.message}}${ if (!!od.story.completed) { var completed = od.story.completed; }$  [*] {{od.ctx.amPlayer ? 'You' : completed.player.alias||completed.player.id}} completed {{completed.trigger.name||completed.trigger.id}}\n    [{{moment(od.story.timestamp).format('llll')}}]${ } }$",html:"<div class='@{od.markup.content}@@{!!od.story.completed?' '+od.markup.escalation_inactive:''}@'>{{od.story.message}}</div>${ if (!!od.story.completed) { var completed = od.story.completed; }$<footer class='@{od.markup.footer}@ @{od.markup.escalation_footer}@'><span class='@{od.markup.escalation_player}@'> {{od.ctx.amPlayer ? 'You' : completed.player.alias||completed.player.id}} completed {{completed.trigger.name||completed.trigger.id}} </span><time class='@{od.markup.escalation_timestamp}@ @{od.markup.timestamp}@' title='Completed on {{(ts = moment(completed.timestamp)).format('llll')}}'>{{ts.fromNow()}}</time> </footer>${ } }$<time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.timestamp)).format('llll')}}'>{{ts.fromNow()}}</time>",image:""},action:{text:"[{{moment(od.story.timestamp).format('llll')}}] - {{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}} completed '{{od.story.action.name}}'.${ if (od.story.changes) { }$\n  Changes:${ } }$${ for (i = 0, _ref = (od.story.changes || []), len = _ref.length; i < _ref.length; i++) { change = _ref[i];if(change.metric.type === 'point'||change.metric.type === 'compound') {diff = ZERO.plus(change.delta['new']).minus(change.delta['old'] || 0);diff = (diff.gt(ZERO) ? '+' : '') + diff.toString(); }$\n    [*] {{diff}} {{change.metric.name}}${ } else if(change.metric.type === 'set') { }$\n  [>] {{change.metric.name}}${ _.forEach(change.delta, function(delta, item) {diff = ZERO.plus(delta['new']).minus(delta['old']||'0');diff = (diff.gt(ZERO) ? '+' : '') + diff.toString();}$\n    [*] {{diff}} {{item}}${ }); }$${ } else if(change.metric.type === 'state') { }$\n  [>] {{change.metric.name}}\n    [+] {{change.delta['new']}}\n    [-] {{change.delta['old']}}${ }} }$",html:"<div class='@{od.markup.content}@'><span class='@{od.markup.actor}@'>{{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}}</span> completed <span class='@{od.markup.score_activity}@'>{{od.story.action.name}}</span>.${ if(od.story.changes) { }$<table class='@{od.markup.score_table}@'>${ } }$${ for (i = 0,\n    _ref = (od.story.changes || []),\n    len = _ref.length; i < _ref.length; i++) {\n      change = _ref[i];if (change.metric.type === 'point'||change.metric.type === 'compound') {diff = ZERO.plus(change.delta['new']).minus(change.delta['old'] || 0);diff = (diff.gt(ZERO) ? '+' : '') + diff.toString();}$<tbody class='@{od.markup.score_table_header}@'><tr><td><span class='@{od.markup.score_metric}@'>{{change.metric.name}}</span></td><td><span class='@{od.markup.score_delta_value}@'>{{diff}}</span></td></tr></tbody>${ } else if(change.metric.type === 'set') { }$<tbody class='@{od.markup.score_table_header}@'><tr><td colspan='2'><span class='@{od.markup.score_metric}@'>{{change.metric.name}}</span></td></tr></tbody><tbody class='@{od.markup.score_table_body}@'>${ _.forEach(change.delta, function(delta, item) {diff = ZERO.plus(delta['new']).minus(delta['old']||'0');diff = (diff.gt(ZERO) ? '+' : '') + diff.toString();}$<tr><td><span class='@{od.markup.score_delta_item}@'>{{item}}</span></td><td><span class='@{od.markup.score_delta_value}@'>{{diff}}</span></td></tr>${ }); }$</tbody>${ } else if(change.metric.type === 'state') { }$<tbody class='@{od.markup.score_table_header}@'><tr><td colspan='2'><span class='@{od.markup.score_metric}@'>{{change.metric.name}}</span></td></tr></tbody><tbody class='@{od.markup.score_table_body}@'><tr><td><span class='@{od.markup.score_delta_value}@ @{od.markup.diff_add}@'>{{change.delta['new']}}</span></td><td><span class='@{od.markup.score_delta_value}@ @{od.markup.diff_rem}@'>{{change.delta['old'] || '--'}}</span></td></tr></tbody>${ }}if(od.story.changes) { }$</table>${ } }$</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.timestamp)).format('llll')}}'>{{ts.fromNow()}}</time>",image:""},custom_rule:{text:"[{{moment(od.story.timestamp).format('llll')}}] - {{od.ctx.amActor ? 'You were' : (od.story.actor.alias||od.story.actor.id) + ' was'}} awarded via '{{od.story.rule.name}}' rule.${ if (od.story.changes) { }$\n  Changes:${ } }$${ for (i = 0, _ref = (od.story.changes || []), len = _ref.length; i < _ref.length; i++) { change = _ref[i];if(change.metric.type === 'point'||change.metric.type === 'compound') {diff = ZERO.plus(change.delta['new']).minus(change.delta['old'] || 0);diff = (diff.gt(ZERO) ? '+' : '') + diff.toString(); }$\n    [*] {{diff}} {{change.metric.name}}${ } else if(change.metric.type === 'set') { }$\n  [>] {{change.metric.name}}${ _.forEach(change.delta, function(delta, item) {diff = ZERO.plus(delta['new']).minus(delta['old']||'0');diff = (diff.gt(ZERO) ? '+' : '') + diff.toString();}$\n    [*] {{diff}} {{item}}${ }); }$${ } else if(change.metric.type === 'state') { }$\n  [>] {{change.metric.name}}\n    [+] {{change.delta['new']}}\n    [-] {{change.delta['old']}}${ }} }$",html:"<div class='@{od.markup.content}@'><span class='@{od.markup.actor}@'>{{od.ctx.amActor ? 'You' : od.story.actor.alias||od.story.actor.id}}</span> {{od.ctx.amActor ? 'were' : 'was'}} awarded via <span class='@{od.markup.score_rule}@'>{{od.story.rule.name}}</span> rule.${ if(od.story.changes) { }$<table class='@{od.markup.score_table}@'>${ } }$${ for (i = 0,\n    _ref = (od.story.changes || []),\n    len = _ref.length; i < _ref.length; i++) {\n      change = _ref[i];if (change.metric.type === 'point'||change.metric.type === 'compound') {diff = ZERO.plus(change.delta['new']).minus(change.delta['old'] || 0);diff = (diff.gt(ZERO) ? '+' : '') + diff.toString();}$<tbody class='@{od.markup.score_table_header}@'><tr><td><span class='@{od.markup.score_metric}@'>{{change.metric.name}}</span></td><td><span class='@{od.markup.score_delta_value}@'>{{diff}}</span></td></tr></tbody>${ } else if(change.metric.type === 'set') { }$<tbody class='@{od.markup.score_table_header}@'><tr><td colspan='2'><span class='@{od.markup.score_metric}@'>{{change.metric.name}}</span></td></tr></tbody><tbody class='@{od.markup.score_table_body}@'>${ _.forEach(change.delta, function(delta, item) {diff = ZERO.plus(delta['new']).minus(delta['old']||'0');diff = (diff.gt(ZERO) ? '+' : '') + diff.toString();}$<tr><td><span class='@{od.markup.score_delta_item}@'>{{item}}</span></td><td><span class='@{od.markup.score_delta_value}@'>{{diff}}</span></td></tr>${ }); }$</tbody>${ } else if(change.metric.type === 'state') { }$<tbody class='@{od.markup.score_table_header}@'><tr><td colspan='2'><span class='@{od.markup.score_metric}@'>{{change.metric.name}}</span></td></tr></tbody><tbody class='@{od.markup.score_table_body}@'><tr><td><span class='@{od.markup.score_delta_value}@ @{od.markup.diff_add}@'>{{change.delta['new']}}</span></td><td><span class='@{od.markup.score_delta_value}@ @{od.markup.diff_rem}@'>{{change.delta['old'] || '--'}}</span></td></tr></tbody>${ }}if(od.story.changes) { }$</table>${ } }$</div><time class='@{od.markup.timestamp}@' title='On {{(ts = moment(od.story.timestamp)).format('llll')}}'>{{ts.fromNow()}}</time>",image:""}},o.prototype.buildContext=function(t,o){var e,a,s,r,d,i,l,c,n,m,p,f,y;
return e={},e.isDummy="debug"===o.env,e.isItem="team"===(a=o.context)||"process"===a,null!=t.team||"team"===o.context?e.isTeam=!0:(null!=t.process||"process"===o.context)&&(e.isProcess=!0),("create"===(s=t.event)||"delete"===s||"join"===s||"leave"===s||"kick"===s||"join:request"===s||"join:request:accept"===s||"join:request:reject"===s||"invite"===s||"invite:accept"===s||"invite:reject"===s||"role:change"===s||"role:request"===s||"role:request:accept"===s||"role:request:reject"===s||"role:assign"===s||"progress"===s||"level"===s||"achievement"===s||"resolution"===s||"action"===s||"custom_rule"===s)&&(null==t.actor||(null!=(i=o.profile)?i.id:void 0)===t.actor.id)&&(e.amActor=!0),"kick"===(l=t.event)||"join:request:accept"===l||"join:request:reject"===l||"role:request:accept"===l||"role:request:reject"===l||"role:assign"===l||"score"===l?(null==t.player||(null!=(c=o.profile)?c.id:void 0)===t.player.id)&&(e.amPlayer=!0):"resolution"===t.event?(null==t.deferred.actor||(null!=(n=o.profile)?n.id:void 0)===t.deferred.actor.id)&&(e.amPlayer=!0):"invite:accept"===(m=t.event)||"invite:reject"===m?(null==t.inviter||(null!=(p=o.profile)?p.id:void 0)===t.inviter.id)&&(e.amInviter=!0):"invite"===t.event?(null==t.invitee||(null!=(f=o.profile)?f.id:void 0)===t.invitee.id)&&(e.amInvitee=!0):"join:request"===t.event?("ACCEPTED"===t.state&&(null!=(y=o.profile)?y.id:void 0)===t.accepted_by.id||"REJECTED"===t.state&&(null!=(r=o.profile)?r.id:void 0)===t.rejected_by.id)&&(e.amMetaActor=!0):"escalation"===t.event&&null!=t.completed&&(null!=(d=o.profile)?d.id:void 0)===t.completed.player.id&&(e.amPlayer=!0),e},o.prototype.compile=function(e,a){var s,r;if(null==(r=o.stored_templates[e]))throw"The "+e+" event is not supported";if(null==(s=r[a]))throw"The "+a+" template for "+e+" event cannot be found";return t.template(s)},o.prototype.toString=function(t,o){var e,a;if(null==o&&(o={}),null==t)throw"The story is not available";return a=this.compile(t.event,"text"),e=this.buildContext(t,o),a({story:t,ext:o,ctx:e})},o.prototype.toHTML=function(o,e,a){var s,r,d,i;if(null==e&&(e={}),null==a&&(a={}),null==o)throw"The story is not available";return i=this.compile(o.event,"html"),s=this.buildContext(o,e),r=i({story:o,ext:e,ctx:s,markup:this.options.markup}),"escalation"===o.event&&(r=t.unescape(r)),a.image===!0&&(d="<div class='"+this.options.markup.image+"'>"+this.getImage(o,e)+"</div>",r=d+r),r},o.prototype.getImage=function(t,o){var e,a;if(null==o&&(o={}),null==t)throw"The story is not available";if(null==o.base_url)throw"The base source url is not specified";return a=this.compile(t.event,"image"),e=this.buildContext(t,o),a({story:t,ext:o,ctx:e,markup:this.options.markup})},o}()});